/**
 * ŸÖÿß⁄òŸàŸÑ ÿ±ÿßÿ®ÿ∑ ⁄©ÿßÿ±ÿ®ÿ±€å - UI Module  
 * @author Agent ChatGPT
 * @version 2.0.0
 */

// ÿπŸÜÿßÿµÿ± DOM Ÿà Ÿàÿ∂ÿπ€åÿ™ ÿßŸàŸÑ€åŸá
let sidebar, sidebarOverlay, settingsModal;
let uiInitialized = false; // ÿ¨ŸÑŸà⁄Ø€åÿ±€å ÿßÿ≤ ÿßŸÅÿ≤ŸàÿØŸÜ ⁄ÜŸÜÿØÿ®ÿßÿ±Ÿá ŸÑ€åÿ≥ŸÜÿ±Ÿáÿß

// ŸÖŸÇÿØÿßÿ±ÿØŸá€å
function initDOM() {
    sidebar = document.getElementById('sidebar');
    sidebarOverlay = document.getElementById('sidebar-overlay');
    settingsModal = document.getElementById('settingsModal');
}

// ŸÖÿØ€åÿ±€åÿ™ ÿ≥ÿß€åÿØÿ®ÿßÿ±
function toggleSidebar() {
    console.log('üî• toggleSidebar called!');
    if (sidebar && sidebarOverlay) {
        sidebar.classList.toggle('open');
        sidebarOverlay.classList.toggle('active');
    // ÿ®ÿ±Ÿàÿ≤ÿ±ÿ≥ÿßŸÜ€å aria-expanded ÿ®ÿ±ÿß€å ÿØÿ≥ÿ™ÿ±ÿ≥‚ÄåŸæÿ∞€åÿ±€å
    const btn = document.getElementById('menuToggle');
    if (btn) btn.setAttribute('aria-expanded', sidebar.classList.contains('open') ? 'true' : 'false');
        console.log(`Sidebar is now ${sidebar.classList.contains('open') ? 'open' : 'closed'}`);
    } else {
        console.error('‚ùå sidebar €åÿß sidebarOverlay Ÿæ€åÿØÿß ŸÜÿ¥ÿØ!');
    }
}

function closeSidebar() {
    console.log('üîí closeSidebar called');
    if (sidebar && sidebarOverlay && sidebar.classList.contains('open')) {
        console.log('üîí ÿØÿ± ÿ≠ÿßŸÑ ÿ®ÿ≥ÿ™ŸÜ ÿ≥ÿß€åÿØÿ®ÿßÿ± ÿßÿ≤ closeSidebar...');
        sidebar.classList.remove('open');
        sidebarOverlay.classList.remove('active');
    const btn = document.getElementById('menuToggle');
    if (btn) btn.setAttribute('aria-expanded', 'false');
    }
}

// ÿ™ŸÜÿ∏€åŸÖ Event Listeners
function setupEventListeners() {
    console.log('üîß ÿ™ŸÜÿ∏€åŸÖ UI Event Listeners...');
    if (uiInitialized) {
        console.log('‚ö†Ô∏è UI Event Listeners ŸÇÿ®ŸÑÿß ÿ™ŸÜÿ∏€åŸÖ ÿ¥ÿØŸá‚ÄåÿßŸÜÿØÿå ÿπÿ®Ÿàÿ±.');
        return;
    }
    uiInitialized = true;
    
    // ŸÖŸÜŸà€å ŸáŸÖÿ®ÿ±⁄Øÿ±€å - ÿ™ŸÅŸà€åÿ∂ ÿ±Ÿà€åÿØÿßÿØ ÿØÿ± ŸÅÿßÿ≤ capture ÿ®ÿ±ÿß€å ÿßÿ∑ŸÖ€åŸÜÿßŸÜ
    document.addEventListener('click', function onMenuCapture(e) {
        const btn = e.target && (e.target.id === 'menuToggle' ? e.target : e.target.closest && e.target.closest('#menuToggle'));
        if (btn) {
            console.log('üî• UI Module: menuToggle (delegated, capture) clicked!', e);
            e.preventDefault();
            e.stopPropagation();
            toggleSidebar();
        }
    }, true);
    console.log('‚úÖ menuToggle delegated listener ÿ´ÿ®ÿ™ ÿ¥ÿØ (capture)');
    
    // ÿ®ÿ≥ÿ™ŸÜ ÿ≥ÿß€åÿØÿ®ÿßÿ± ÿ®ÿß overlay
    if (sidebarOverlay) {
        sidebarOverlay.addEventListener('click', function(e) {
            console.log('üî• Overlay clicked - ÿ®ÿ≥ÿ™ŸÜ ÿ≥ÿß€åÿØÿ®ÿßÿ±');
            e.preventDefault();
            e.stopPropagation();
            closeSidebar();
        });
        console.log('‚úÖ sidebarOverlay event listener ÿßÿ∂ÿßŸÅŸá ÿ¥ÿØ');
    } else {
        console.warn('‚ö†Ô∏è sidebarOverlay element Ÿæ€åÿØÿß ŸÜÿ¥ÿØ!');
    }
    
    // ÿ±Ÿà€åÿØÿßÿØ ÿπŸÖŸàŸÖ€å ÿ®ÿ±ÿß€å ÿ®ÿ≥ÿ™ŸÜ ÿ≥ÿß€åÿØÿ®ÿßÿ±
    document.addEventListener('click', function(e) {
        // ŸÅŸÇÿ∑ ÿß⁄Øÿ± sidebar ÿØÿ± ÿ≠ÿßŸÑÿ™ ŸÖŸàÿ®ÿß€åŸÑ ÿ®ÿßÿ≤ ÿßÿ≥ÿ™
        if (sidebar && sidebar.classList.contains('open')) {
            console.log('üîç Document click - target:', e.target.tagName, e.target.className);
            console.log('üîç Target element:', e.target);
            
            // ÿ®ÿ±ÿ±ÿ≥€å ÿß€åŸÜ⁄©Ÿá ÿ¢€åÿß ⁄©ŸÑ€å⁄© ÿØÿßÿÆŸÑ sidebar ÿ®ŸàÿØŸá €åÿß ÿÆ€åÿ±
            const clickedInsideSidebar = sidebar.contains(e.target);
            const clickedOnMenuToggle = e.target.closest('#menuToggle');
            
            console.log('üîç clickedInsideSidebar:', clickedInsideSidebar);
            console.log('üîç clickedOnMenuToggle:', clickedOnMenuToggle);
            
            // ÿß⁄Øÿ± ⁄©ŸÑ€å⁄© ÿÆÿßÿ±ÿ¨ ÿßÿ≤ sidebar Ÿà ÿØ⁄©ŸÖŸá ŸÖŸÜŸà ÿ®ŸàÿØ
            if (!clickedInsideSidebar && !clickedOnMenuToggle) {
                console.log('üî• ⁄©ŸÑ€å⁄© ÿÆÿßÿ±ÿ¨ ÿßÿ≤ sidebar - ÿ®ÿ≥ÿ™ŸÜ ŸÖŸÜŸà');
                e.preventDefault();
                e.stopPropagation();
                closeSidebar();
            }
            
            // ÿß⁄Øÿ± ÿ±Ÿà€å ⁄Üÿ™ ⁄©ŸÑ€å⁄© ÿ¥ÿØ
            if (e.target.closest('.chat-list li')) {
                console.log('üî• ⁄©ŸÑ€å⁄© ÿ±Ÿà€å ⁄Üÿ™ - ÿ®ÿ≥ÿ™ŸÜ ŸÖŸÜŸà');
                setTimeout(() => closeSidebar(), 150);
            }
        }
    }, false); // ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿßÿ≤ bubble phase

    // ÿ®ÿ≥ÿ™ŸÜ ÿ≥ÿß€åÿØÿ®ÿßÿ± ÿØÿ± ÿ™ÿ∫€å€åÿ± ÿßŸÜÿØÿßÿ≤Ÿá ÿ®Ÿá ÿØÿ≥⁄©ÿ™ÿßŸæ
    window.addEventListener('resize', () => {
        if (window.innerWidth > 768) {
            closeSidebar();
        }
    });
    
    // ÿ™ŸÜÿ∏€åŸÖÿßÿ™ - ÿßÿ™ÿµÿßŸÑ ÿ®Ÿá SettingsModule
    document.getElementById('settingsBtn')?.addEventListener('click', (e) => {
        console.log('üî• Settings button clicked!');
        e.preventDefault();
        if (window.SettingsModule && typeof window.SettingsModule.openSettings === 'function') {
            console.log('‚úÖ Opening settings via SettingsModule');
            window.SettingsModule.openSettings();
        } else {
            console.error('‚ùå SettingsModule €åÿß openSettings function Ÿæ€åÿØÿß ŸÜÿ¥ÿØ!', {
                SettingsModule: !!window.SettingsModule,
                openSettings: window.SettingsModule ? typeof window.SettingsModule.openSettings : 'N/A'
            });
        }
        closeSidebar();
    });
    
    // ÿ™ŸÜÿ∏€åŸÖÿßÿ™ TTS - ÿßÿ™ÿµÿßŸÑ ÿ®Ÿá TTSModule  
    document.getElementById('ttsSettingsBtn')?.addEventListener('click', (e) => {
        console.log('üî• TTS Settings button clicked!');
        e.preventDefault();
        if (window.TTSModule && typeof window.TTSModule.openTTSSettings === 'function') {
            console.log('‚úÖ Opening TTS settings via TTSModule');
            window.TTSModule.openTTSSettings();
        } else {
            console.error('‚ùå TTSModule €åÿß openTTSSettings function Ÿæ€åÿØÿß ŸÜÿ¥ÿØ!', {
                TTSModule: !!window.TTSModule,
                openTTSSettings: window.TTSModule ? typeof window.TTSModule.openTTSSettings : 'N/A'
            });
        }
    });
    
    // ÿ®ÿ≥ÿ™ŸÜ ÿ™ŸÜÿ∏€åŸÖÿßÿ™ - deprecated, will be removed when SettingsModule fully takes over
    // document.getElementById('closeSettingsBtn')?.addEventListener('click', closeSettings);
    
    // ÿ∞ÿÆ€åÿ±Ÿá ÿ™ŸÜÿ∏€åŸÖÿßÿ™ - deprecated, will be removed when SettingsModule fully takes over  
    // document.getElementById('saveModelBtn')?.addEventListener('click', saveSettings);
    
    // ⁄Üÿ™ ÿ¨ÿØ€åÿØ
    document.getElementById('newChatBtn')?.addEventListener('click', () => {
        if (window.ChatModule) window.ChatModule.newChat();
        closeSidebar();
    });
}

// ⁄©Ÿæ€å ⁄©ÿ±ÿØŸÜ
function copyToClipboard(text, button = null) {
    navigator.clipboard.writeText(text).then(() => {
        if (button) {
            const originalIcon = button.innerHTML;
            button.innerHTML = '<i class="fa fa-check"></i>';
            setTimeout(() => {
                button.innerHTML = originalIcon;
            }, 1000);
        }
        showNotification('ŸÖÿ™ŸÜ ⁄©Ÿæ€å ÿ¥ÿØ');
    }).catch(() => {
        showNotification('ÿÆÿ∑ÿß ÿØÿ± ⁄©Ÿæ€å ⁄©ÿ±ÿØŸÜ');
    });
}

// ŸÜŸàÿ™€åŸÅ€å⁄©€åÿ¥ŸÜ
function showNotification(message, type = 'info') {
    const existing = document.querySelector('.ui-notification');
    if (existing) existing.remove();
    
    const notif = document.createElement('div');
    notif.className = `ui-notification ${type}`;
    notif.textContent = message;
    notif.style.cssText = `
        position: fixed; top: 20px; right: 20px; padding: 12px 20px;
        background: ${type === 'error' ? '#e74c3c' : '#2ecc71'}; color: white;
        border-radius: 5px; z-index: 10000; opacity: 0;
        transition: opacity 0.3s ease; font-size: 14px;
    `;
    
    document.body.appendChild(notif);
    setTimeout(() => notif.style.opacity = '1', 10);
    setTimeout(() => {
        notif.style.opacity = '0';
        setTimeout(() => notif.remove(), 300);
    }, 3000);
}

// ŸÜŸÖÿß€åÿ¥ ŸÖÿ≠ÿØŸàÿØ€åÿ™
function showLimitNotification(message) {
    showNotification(message, 'error');
}

// ŸÖŸÇÿØÿßÿ±ÿØŸá€å ŸÖÿß⁄òŸàŸÑ UI
function init() {
    initDOM();
    setupEventListeners();
    console.log('ŸÖÿß⁄òŸàŸÑ UI ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿ¥ÿØ');
}

// Export ⁄©ÿ±ÿØŸÜ ÿ™Ÿàÿßÿ®ÿπ
if (typeof window !== 'undefined') {
    window.UIModule = {
        init,
        toggleSidebar,
        closeSidebar,
        showNotification,
        copyToClipboard
    };
}

console.log('üì¶ ŸÖÿß⁄òŸàŸÑ UI ÿ®ÿßÿ±⁄Øÿ∞ÿßÿ±€å ÿ¥ÿØ - UIModule ÿØÿ± window ŸÇÿ±ÿßÿ± ⁄Øÿ±ŸÅÿ™');

// ÿßÿ∑ŸÖ€åŸÜÿßŸÜ ÿßÿ≤ ŸÖŸÇÿØÿßÿ±ÿØŸá€å ÿ≠ÿ™€å ÿß⁄Øÿ± app.js ŸÖÿπÿ∑ŸÑ ÿ≥ÿß€åÿ± ŸÖÿß⁄òŸàŸÑ‚ÄåŸáÿß ÿ®ŸÖÿßŸÜÿØ
try {
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            if (window.UIModule && typeof window.UIModule.init === 'function') {
                window.UIModule.init();
            }
        });
    } else {
        if (window.UIModule && typeof window.UIModule.init === 'function') {
            window.UIModule.init();
        }
    }
} catch (e) {
    console.warn('‚ö†Ô∏è ÿÆÿ∑ÿß ÿØÿ± self-init ŸÖÿß⁄òŸàŸÑ UI:', e);
}
